#version 440 core
layout (location = 0) in vec3 position; 
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoords;
layout (location = 3) in uvec4 boneIds;
layout (location = 4) in vec4 boneWeights;

out vec2 tex_cord;
out vec3 v_normal;
out vec3 v_pos;
out vec4 bw;

uniform mat4 bone_transforms[50];
uniform mat4 view_projection_matrix;
uniform mat4 model_matrix;

void main()
{
	bw = vec4(0);
	if(int(boneIds.x) == 1)
	bw.z = boneIds.x;
	//boneWeights = normalize(boneWeights);
	vec4 newPosition = vec4(0.0f);
	vec4 newNormal = vec4(0.0f);

	for(int i = 0; i < 4; i++)
	{
		if(boneWeights[i] > 0.0f)
		{
			mat4 jointM = bone_transforms[boneIds[i]];
			newPosition += boneWeights[i] * jointM * vec4(position, 1.0f);
			newNormal += boneWeights[i] * jointM * vec4(normal, 1.0f);
		}
	}
	
	
	gl_Position = view_projection_matrix * model_matrix * newPosition;
	v_pos = vec3(model_matrix * vec4(position, 1.0));
	tex_cord = texCoords;
	v_normal = newNormal.xyz;
}