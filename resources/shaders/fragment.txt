#version 440 core

in vec2 tex_cord;
in vec3 v_normal;
in vec3 v_pos;
out vec4 color;

vec3 lightPos = vec3(0.2, 1.0, -3.0);

struct Material
{
	sampler2D diffuse1;
	sampler2D specular1;
};

uniform Material material;

void main()
{
	//vec3 lightDir = normalize(lightPos - v_pos);
	//float diff = max(dot(v_normal, lightDir), 0.2);
	//vec3 dCol = diff * texture(material.diffuse1, tex_cord).rgb; 
	//vec3 sCol = diff * texture(material.specular1, tex_cord).rgb; 
	//color = vec4(dCol+sCol, 1);
	color = texture(material.diffuse1, tex_cord);
}